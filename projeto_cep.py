# -*- coding: utf-8 -*-
"""Projeto CEP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-_bHQfSem1uguNwdWIMEZn7Lnl-iFDXD
"""

from scipy.stats import binom

def calcular_probabilidade_aceitacao(tamanho_amostra, itens_aceitaveis, taxa_defeitos):
    # Calcular a probabilidade de aceitação usando a distribuição binomial
    probabilidade_aceitacao = binom.cdf(itens_aceitaveis, tamanho_amostra, taxa_defeitos)
    return probabilidade_aceitacao

def calcular_ITM(tamanho_lote, tamanho_amostra, taxa_aceitacao):
    # Calcular o ITM
    ITM = (1 - taxa_aceitacao) * (tamanho_lote - tamanho_amostra) + tamanho_amostra
    return ITM

def calcular_risco_fornecedor(tamanho_amostra, itens_aceitaveis, taxa_defeitos_aceitaveis):
    # Calcular o risco do fornecedor (probabilidade de rejeitar injustamente um lote aceitável)
    risco_fornecedor = 1 - binom.cdf(itens_aceitaveis, tamanho_amostra, taxa_defeitos_aceitaveis)
    return risco_fornecedor

def calcular_risco_consumidor(tamanho_amostra, itens_aceitaveis, taxa_defeitos_inaceitaveis):
    # Calcular o risco do consumidor (probabilidade de aceitar injustamente um lote inaceitável)
    risco_consumidor = binom.cdf(itens_aceitaveis, tamanho_amostra, taxa_defeitos_inaceitaveis)
    return risco_consumidor

def main():
    # Solicitar ao usuário os valores de entrada
    tamanho_lote = int(input("Informe o tamanho do lote: "))
    tamanho_amostra = int(input("Informe o tamanho da amostra: "))
    itens_aceitaveis = int(input("Informe o número de itens aceitáveis: "))
    taxa_defeitos = float(input("Informe a taxa de defeitos esperada (0 a 1): "))
    numero_lotes = int(input("Informe o número de lotes: "))
    custo_unitario = float(input("Informe o custo unitário: "))
    custo_lote_rejeitado = float(input("Informe o custo de deslocamento por lote rejeitado: "))
    taxa_defeitos_aceitaveis = float(input("Informe a taxa de defeitos aceitável (NQA) (0 a 1): "))
    taxa_defeitos_inaceitaveis = float(input("Informe a taxa de defeitos inaceitável (PTDL) (0 a 1): "))

    # Calcular a probabilidade de aceitação
    taxa_aceitacao = calcular_probabilidade_aceitacao(tamanho_amostra, itens_aceitaveis, taxa_defeitos)

    # Calcular o ITM
    ITM = calcular_ITM(tamanho_lote, tamanho_amostra, taxa_aceitacao)

    # Calcular o custo de inspeção
    custo_inspecao = numero_lotes * ITM * custo_unitario

    # Calcular o custo de deslocamento
    custo_deslocamento = numero_lotes * custo_lote_rejeitado * (1 - taxa_aceitacao)

    # Calcular o custo total
    custo_total = custo_inspecao + custo_deslocamento

    # Calcular o risco do fornecedor
    risco_fornecedor = calcular_risco_fornecedor(tamanho_amostra, itens_aceitaveis, taxa_defeitos_aceitaveis)

    # Calcular o risco do consumidor
    risco_consumidor = calcular_risco_consumidor(tamanho_amostra, itens_aceitaveis, taxa_defeitos_inaceitaveis)


    # Exibir os resultados
    print(f"A probabilidade de aceitação do lote é: {taxa_aceitacao:.4f}")
    print(f"O ITM (Índice de Tamanho do Lote) é: {ITM:.2f}")
    print(f"O custo de inspeção é: R${custo_inspecao:.2f}")
    print(f"O custo de deslocamento é: R${custo_deslocamento:.2f}")
    print(f"O custo total é: R${custo_total:.2f}")
    print(f"O risco do fornecedor (rejeição injusta) é: {risco_fornecedor:.4f}")
    print(f"O risco do consumidor (aceitação injusta) é: {risco_consumidor:.4f}")


if __name__ == "__main__":
    main()